{  
  "version": "2.0.0",
  "tasks": [
    { 
      // 这个大括号里是"构建（build）"任务
      "type": "cppbuild", // 任务类型，process是vsc把预定义变量和转义解析后直接全部传给command
      "label": "C/C++: g++.exe 生成活动文件", // 任务名称，可以更改，不过不建议改
      "command": "C:/Program Files/mingw64/bin/g++.exe", // 编译命令，编译c++是g++
      "args": [ // 方括号里是传给gcc命令的一系列参数，用于实现一些功能
        "-fdiagnostics-color=always",
        "-g", // 生成和调试有关的信息
        "${file}", // 指定要编译的是当前文件
        "${fileDirname}\\Code\\*.cpp", // 是搜索到当前目录子文件夹的所有cpp文件
        "-o", // 指定输出文件的路径和名称，创建当前目录下所有cpp文件的目标文件并链接
        "${fileDirname}\\bin\\${fileBasenameNoExtension}.exe", // 将链接好的.exe文件放入当前目录下的bin目录下
        // "-Wall", // 开启额外警告
        "-static-libgcc", // 静态链接libgcc
        "-fexec-charset=GBK", // 生成的程序使用GBK编码，不加这一条会导致Win下输出中文乱码
        // "-std=c11", // 语言标准，可根据自己的需要进行修改，写c++要换成c++的语言标准，比如c++11
      ],
      "options": { // 设置编译器和链接器
        "cwd": "C:/Program Files/mingw64/bin"
      },
      "problemMatcher": [ // 捕捉编译时编译器在终端里显示的报错信息，将其显示在vscode的问题面板里
        "$gcc"
      ],
      "group": { // group表示组，我们可以有很多的task，然后把他们放在一个组里
        "kind": "build",  // 表示这一组任务类型是构建
        "isDefault": true // 表示这个任务是当前这组任务中的默认任务
      },
      "detail": "调试器生成的任务。"
    }
  ],
}